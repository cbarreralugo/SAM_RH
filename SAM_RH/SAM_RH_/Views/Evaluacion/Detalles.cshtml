@model SAM_RH_Negocio.Modelo.Evaluacion_Modelo

@{
    ViewBag.Title = "Detalles";
}

<h2>Detalles</h2>
<!DOCTYPE html>
<html>
<head>
    <title>Formulario Bootstrap</title>
    <!-- Agrega el CSS de Bootstrap desde un CDN -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
</head>
<body>
    <h1 hidden="hidden">
        @Html.DisplayFor(model => model.ID_Evaluacion)
    </h1>
    <h1 hidden="hidden">
        @Html.DisplayFor(model => model.Tipo_evaluacion)
    </h1>

    <div class="form-row">
        <div class="col-md-3 mb-3">
            <label for="validationCustom01">Evaluación</label>
            <input type="text" class="form-control" id="validationCustom01" disabled placeholder="Nombre evaluación" value="@Html.DisplayFor(model => model.Nombre_evaluacion)" required>
            <div class="valid-feedback">
                Looks good!
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <label for="validationCustom02">Versión de evaluación</label>
            <input type="text" class="form-control" id="validationCustom02" disabled placeholder="Versión" value="@Html.DisplayFor(model => model.Version)" required>
            <div class="valid-feedback">
                Looks good!
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <label for="validationCustom03">Fecha de creación de evaluación</label>
            <input type="text" class="form-control" id="validationCustom03" disabled placeholder="Fecha de creación" value="@Html.DisplayFor(model => model.Fecha_Creacion)" required>
            <div class="valid-feedback">
                Looks good!
            </div>
        </div>
    </div>
    <div class="container">
        <h2>Crear Pregunta</h2>
        <form id="questionForm">
            <div class="form-group">
                <label for="questionName">Nombre de la Pregunta</label>
                <input type="text" class="form-control" id="questionName" placeholder="Ingresa el nombre de la pregunta">
            </div>
            <div id="answerSection">
                <!-- Las respuestas se agregarán aquí dinámicamente -->
            </div>
            <button type="button" class="btn btn-primary mb-2" onclick="addAnswer()">Agregar Respuesta</button>
            <button type="submit" class="btn btn-success  mb-2">Crear Pregunta</button>
        </form>

        <div id="questionsContainer">
            <!-- Las preguntas se mostrarán aquí en forma de tarjetas -->
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="~/Scripts/Evaluaciones/questionForm.js"></script>
    <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>

</body>
</html>
<hr />

<p>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    @Html.ActionLink("Back to List", "Index")
</p>
